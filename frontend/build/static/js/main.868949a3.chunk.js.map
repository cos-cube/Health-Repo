{"version":3,"sources":["schedulingAppt.js","Home.js","logIn.js","CreateAccount.js","Diagnose.js","ShowDiagnoses.js","ViewMedHist.js","DocHome.js","ViewOneHistory.js","Settings.js","DocSettings.js","PatientsViewAppt.js","NoMedHistFound.js","DocViewAppt.js","MakeDoc.js","App.js","index.js"],"names":["theDate","theTime","endTime","theConcerns","theSymptoms","theDoc","theme","global","colors","brand","focus","font","family","SidebarButton","label","rest","Button","plain","hover","Box","background","undefined","pad","horizontal","vertical","Text","size","SidebarButtons","useState","active","setActive","Grommet","full","fill","direction","map","key","onClick","window","location","fetch","email_in_use","then","res","json","string_json","JSON","stringify","email_json","parse","email","console","log","Home","renderName","name","Header","tag","elevation","justify","align","flex","style","borderBottom","color","textDecoration","href","Heading","level","margin","Grid","rows","columns","areas","start","end","gridArea","width","animation","type","duration","Component","AppBar","props","left","right","zIndex","LogIn","state","isDoctor","this","routeChange","bind","history","push","Form","onReset","event","onSubmit","value","isDoc","password","data","length","alert","FormField","placeholder","required","component","CheckBox","checked","onChange","setState","target","textAlign","primary","withRouter","CreateAccount","method","firstName","lastName","address","gender","conditions","medications","surgeries","validate","regexp","message","DropContent","initialDate","date","initialTime","time","onClose","React","setDate","setTime","close","parsedTime","split","startHour","parseInt","Calendar","animate","onSelect","showAdjacentDays","gap","Keyboard","onEnter","preventDefault","MaskedInput","mask","options","fixed","DateTimeDropButton","open","setOpen","DropButton","onOpen","dropContent","nextDate","nextTime","setTimeout","Date","toLocaleDateString","Schedule","ConcernsTextArea","setValue","height","TextArea","SymptomsTextArea","DoctorsDropdown","doctorsList","setList","useEffect","arr","forEach","i","tmp","Select","doc","match","diagnosis","prescription","id","SchedulingAppt","gen_uid","x","ViewMedHist","medhiststate","getNames","names","patName","Body","className","patient","Name","marginBottom","DocHome","ViewOneHistory","medhiststate2","params","allDiagnoses","getHistory","Table","TableBody","TableRow","TableCell","scope","medication","Body2","doctor","concerns","symptoms","Settings","oldPassword","newPassword","affectedRows","DocSettings","PatientsViewAppointments","appointmentsState","user","substring","theStart","theEnd","status","ID","reload","NoMedHistFound","alignSelf","DocViewAppt","apptlist","appt","starttime","MakeDoc","schedule","DiagnosisTextArea","PrescriptionTextArea","Diagnose","ShowDiagnoses","diagnoses","App","setComponent","who","path","render","PatientsViewAppt","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.868949a3.chunk.js","sourcesContent":["import React, { Component, useState, useEffect } from 'react';\nimport {\n  Schedule,\n} from 'grommet-icons';\nimport {\n  Box,\n  Button,\n  Heading,\n  Form,\n  Text,\n  TextArea,\n  Grommet,\n  Calendar,\n  DropButton,\n  MaskedInput,\n  Keyboard,\n  Select\n} from 'grommet';\nimport './App.css';\nconst theme = {\n  global: {\n    colors: {\n      brand: '#000000',\n      focus: \"#000000\",\n      active: \"#000000\",\n    },\n    font: {\n      family: 'Lato',\n    },\n  },\n};\nvar theDate;\nvar theTime;\nvar endTime;\nvar theConcerns;\nvar theSymptoms;\nvar theDoc;\nconst AppBar = (props) => (\n  <Box\n    tag='header'\n    direction='row'\n    align='center'\n    justify='between'\n    background='brand'\n    pad={{ left: 'medium', right: 'small', vertical: 'small' }}\n    style={{ zIndex: '1' }}\n    {...props} />\n);\n\nconst DropContent = ({ date: initialDate, time: initialTime, onClose }) => {\n  const [date, setDate] = React.useState();\n  const [time, setTime] = React.useState();\n\n  const close = () => {\n    theDate = date;\n    theTime = time;\n\n    //time is string, store it as [hour, min]\n    let parsedTime = theTime.split(\":\");\n\n    //parse hr string to in and add one hour to start hour\n    let startHour = parseInt(parsedTime[0], 10);\n    let endHour = startHour + 1;\n\n    //rejoin into string\n    endTime = `${endHour}:00`;\n\n    console.log(endTime);\n    console.log(theDate)\n    console.log(theTime);\n    onClose(date || initialDate, time || initialTime);\n  };\n\n  return (\n    <Box align=\"center\">\n      <Calendar\n        animate={false}\n        date={date || initialDate}\n        onSelect={setDate}\n        showAdjacentDays={false}\n        required\n      />\n      <Box flex={false} pad=\"medium\" gap=\"small\">\n        <Keyboard\n          required\n          onEnter={event => {\n            event.preventDefault(); // so drop doesn't re-open\n            close();\n          }}\n        >\n          <MaskedInput\n            mask={[\n              {\n                length: [1, 2],\n                options: [\n                  \"0\",\n                  \"1\",\n                  \"2\",\n                  \"3\",\n                  \"4\",\n                  \"5\",\n                  \"6\",\n                  \"7\",\n                  \"8\",\n                  \"9\",\n                  \"10\",\n                  \"11\",\n                  \"12\",\n                  \"13\",\n                  \"14\",\n                  \"15\",\n                  \"16\",\n                  \"17\",\n                  \"18\",\n                  \"19\",\n                  \"20\",\n                  \"21\",\n                  \"22\",\n                  \"23\",\n\n                ],\n                regexp: /^1[1-2]$|^[0-9]$/,\n                placeholder: \"hh\"\n              },\n              { fixed: \":\" },\n              {\n                length: 2,\n                options: [\"00\"],\n                regexp: /^[0-5][0-9]$|^[0-9]$/,\n                placeholder: \"mm\"\n              }\n            ]}\n            value={time || initialTime}\n            name=\"maskedInput\"\n            onChange={event => setTime(event.target.value)}\n            required\n          />\n        </Keyboard>\n        <Box flex={false}>\n          <Button label=\"Done\" onClick={close} color=\"#00739D\" />\n        </Box>\n      </Box>\n    </Box>\n  );\n};\n\nconst DateTimeDropButton = () => {\n  const [date, setDate] = React.useState();\n  const [time, setTime] = React.useState(\"\");\n  const [open, setOpen] = React.useState();\n\n  const onClose = (nextDate, nextTime) => {\n    setDate(nextDate);\n    setTime(nextTime);\n    setOpen(false);\n    setTimeout(() => setOpen(undefined), 1);\n  };\n\n  return (\n    <Grommet theme={theme}>\n      <Box align=\"center\" pad=\"large\">\n        <DropButton\n          open={open}\n          onClose={() => setOpen(false)}\n          onOpen={() => setOpen(true)}\n          dropContent={\n            <DropContent date={date} time={time} onClose={onClose} />\n          }\n        >\n          <Box direction=\"row\" gap=\"small\" align=\"center\" pad=\"small\">\n            <Text color={date ? undefined : \"dark-5\"}>\n              {date\n                ? `${new Date(date).toLocaleDateString()} ${time}`\n                : \"Select date & time\"}\n            </Text>\n            <Schedule />\n          </Box>\n        </DropButton>\n      </Box>\n    </Grommet>\n  );\n};\n\nconst ConcernsTextArea = () => {\n  const [value, setValue] = React.useState(\"\");\n\n  const onChange = event => {\n    setValue(event.target.value);\n    theConcerns = event.target.value;\n  };\n\n  return (\n    <Grommet theme={theme}>\n      <Box\n        width=\"medium\"\n        height=\"xsmall\"\n      >\n      <TextArea\n        placeholder=\"Enter your concerns...\"\n        value={value}\n        onChange={onChange}\n        fill\n        required />\n      </Box>\n    </Grommet>\n  );\n};\n\nconst SymptomsTextArea = () => {\n  const [value, setValue] = React.useState(\"\");\n\n  const onChange = event => {\n    setValue(event.target.value);\n    theSymptoms = event.target.value;\n  };\n\n  return (\n    <Grommet theme={theme}>\n      <Box\n        width=\"medium\"\n        height=\"xsmall\"\n      >\n        <TextArea\n          placeholder=\"Enter your symptoms...\"\n          value={value}\n          onChange={onChange} fill\n          required />\n      </Box>\n    </Grommet>\n  );\n};\n\nfunction DoctorsDropdown() {\n  const [value, setValue] = useState();\n  const [doctorsList, setList] = useState([]);\n  useEffect(() => {    \n    fetch(\"http://localhost:3001/docInfo\")\n    .then(res => res.json())\n    .then(res => {\n      let arr = []\n      res.data.forEach(i => {\n        let tmp = `${i.name} (${i.email})`;\n        arr.push(tmp);\n      });\n      setList(arr);\n    });\n  }, []);\n  const onChange = event => {\n    setValue(event.value);\n    let doc = event.value.match(/\\((.*)\\)/)[1];\n    theDoc = doc;\n  };\n  return (\n    <Select\n      options={doctorsList}\n      value={value}\n      placeholder=\"Select Doctor\"\n      onChange={onChange} fill\n      required\n    />\n  );\n}\n\nexport class SchedulingAppt extends Component {\n  constuctor() {\n  }\n  render() {\n    return (\n      <Grommet theme={theme} full>\n        <AppBar>\n        <a style={{ color: 'inherit', textDecoration: 'inherit'}} href=\"/\"><Heading level='3' margin='none'>HREP </Heading></a>\n        </AppBar>\n        <Box align=\"center\" pad=\"small\" gap=\"small\">\n          <Form\n            onSubmit={({ value }) => {\n              //probably fetch uid here, add one\n              fetch(\"http://localhost:3001/userInSession\")\n                .then(res => res.json())\n                .then(res => {\n                  var string_json = JSON.stringify(res);\n                  var email_json = JSON.parse(string_json);\n                  let email_in_use = email_json.email;\n                  fetch(\"http://localhost:3001/checkIfApptExists?email=\" + email_in_use + \"&startTime=\" + theTime + \"&date=\" + theDate + \"&docEmail=\" + theDoc)\n                    .then(res => res.json())\n                    .then(res => {\n                      if ((res.data[0])) {\n                        window.alert(\"Appointment Clash! Try another doctor or date/time\");\n                      } else {\n                        fetch(\"http://localhost:3001/genApptUID\")\n                          .then(res => res.json())\n                          .then(res => {\n                            var string_json = JSON.stringify(res);\n                            var uid_json = JSON.parse(string_json);\n                            let gen_uid = uid_json.id;\n                            console.log(gen_uid);\n                            fetch(\"http://localhost:3001/schedule?time=\" + theTime + \"&endTime=\" + endTime +\n                              \"&date=\" + theDate + \"&concerns=\" + theConcerns + \"&symptoms=\" + theSymptoms + \n                              \"&id=\" + gen_uid + \"&doc=\" + theDoc).then((x)=>{\n                              fetch(\"http://localhost:3001/addToPatientSeeAppt?email=\" + email_in_use + \"&id=\" + gen_uid +\n                                \"&concerns=\" + theConcerns + \"&symptoms=\" + theSymptoms).then((x)=>{\n                                  window.alert(\"Appointment successfully scheduled!\");\n                                });\n                            })\n                          });\n                      }\n                    });\n                });\n            }}\n          >\n            <Box align=\"center\" gap=\"small\">\n              <DoctorsDropdown />\n            </Box>\n            <DateTimeDropButton>\n            </DateTimeDropButton>\n            <ConcernsTextArea />\n            <br />\n            <SymptomsTextArea />\n            <br />\n            <Box align=\"center\" pad=\"small\" gap=\"small\">\n              <Button\n                label=\"Attempt To Schedule\"\n                type=\"submit\"\n                primary\n              />\n            </Box>\n          </Form>\n        </Box>\n      </Grommet>\n    );\n  }\n}\nexport default SchedulingAppt;","import React, { Component, useState } from 'react';\nimport {\n  Box,\n  Button,\n  Heading,\n  Grommet,\n  Text,\n  Grid\n} from 'grommet';\n\nimport './App.css';\n\nconst theme = {\n  global: {\n    colors: {\n      brand: '#12AA00',\n      focus: '#000000'\n    },\n    font: {\n      family: 'Lato',\n    },\n  },\n};\n\nconst SidebarButton = ({ label, ...rest }) => (\n  <Button plain {...rest}>\n    {({ hover }) => (\n      <Box\n        background={hover ? \"#DADADA\" : undefined}\n        pad={{ horizontal: \"large\", vertical: \"medium\" }}\n      >\n        <Text size=\"large\">{label}</Text>\n      </Box>\n    )}\n  </Button>\n);\n\nconst SidebarButtons = () => {\n  const [active, setActive] = useState();\n  return (\n    <Grommet full theme={theme}>\n      <Box fill direction=\"row\">\n        <Box background=\"brand\">\n          {[\"View Medical History\", \"View Appointments\", \"Schedule Appointment\", \"Settings\", \"Sign Out\"].map(label => (\n            <SidebarButton\n              key={label}\n              label={label}\n              active={label === active}\n              onClick={() => {\n                if (label === \"Schedule Appointment\") {\n                  window.location = \"/scheduleAppt\"\n                }\n                else if (label === \"Sign Out\") {\n                  fetch(\"http://localhost:3001/endSession\");\n                  window.location = \"/\"\n                }\n                else if (label === \"View Appointments\") {\n                  window.location = \"/PatientsViewAppt\"\n                }\n                else if (label === \"View Medical History\") {\n                  let email_in_use = \"\";\n                  fetch(\"http://localhost:3001/userInSession\")\n                    .then(res => res.json())\n                    .then(res => {\n                      var string_json = JSON.stringify(res);\n                      var email_json = JSON.parse(string_json);\n                      email_in_use = email_json.email;\n                      console.log(\"Email In Use Is :\" + email_in_use);\n                      window.location = \"/ViewOneHistory/\" + email_in_use;\n                    });\n                }\n                else if (label === \"Settings\") {\n                  window.location = \"/Settings\"\n                }\n                setActive(label);\n              }}\n            />\n          ))}\n        </Box>\n      </Box>\n    </Grommet>\n  );\n};\nexport class Home extends Component {\n  renderName = ({ name, email }) => <div key={email}>{name} {name}</div>\n\n  render() {\n    const Header = () => (\n      <Box\n        tag='header'\n        background='brand'\n        pad='small'\n        elevation='small'\n        justify='between'\n        direction='row'\n        align='center'\n        flex={false}\n        style={{borderBottom:\"1px solid grey\"}}\n      >\n        <a style={{ color: 'inherit', textDecoration: 'inherit'}} href=\"/\"><Heading level='3' margin='none'>HREP</Heading></a>\n      </Box>\n    );\n\n    return (\n      <Grommet full={true}\n        theme={theme} >\n        <Box fill={true}>\n          <Header/>\n          <Grid\n            fill\n            rows={['auto', 'flex']}\n            columns={['auto', 'flex']}\n            areas={[\n              { name: 'sidebar', start: [0, 1], end: [0, 1] },\n              { name: 'main', start: [1, 1], end: [1, 1] },\n            ]}>\n            <Box\n              gridArea=\"sidebar\"\n              width=\"small\"\n              animation={[\n                { type: 'fadeIn', duration: 300 },\n                { type: 'slideRight', size: 'xlarge', duration: 150 },\n              ]}\n            >\n              <SidebarButtons />\n            </Box>\n            <Box\n              gridArea=\"main\"\n              justify=\"top\"\n              align=\"center\">\n              <Box align=\"center\" pad=\"large\">\n                <Heading \n                  color=\"#000000\">Welcome !! Patient.\n                </Heading>\n              </Box>\n            </Box>\n          </Grid>\n        </Box>\n      </Grommet>\n    );\n  }\n}\n\nexport default Home;","import React, { Component} from 'react';\nimport { withRouter } from 'react-router-dom';\nimport {\n  Box,\n  Button,\n  Heading,\n  Grommet,\n  FormField,\n  Form,\n  CheckBox,\n} from 'grommet';\n\nimport './App.css';\n\nconst theme = {\n  global: {\n    colors: {\n      brand: '#000000',\n      focus: \"#000000\",\n      active: \"#000000\",\n    },\n    font: {\n      family: 'Lato',\n    },\n  },\n};\n\nconst AppBar = (props) => (\n  <Box\n    tag='header'\n    direction='row'\n    align='center'\n    justify='between'\n    background='brand'\n    pad={{ left: 'medium', right: 'small', vertical: 'small' }}\n    style={{ zIndex: '1' }}\n    {...props} />\n);\n\nclass LogIn extends Component {\n  state = { isDoctor: false }\n\n  constuctor() {\n    this.routeChange = this.routeChange.bind(this);\n  }\n\n  routeChange() {\n    let path = '/Home';\n    this.props.history.push(path);\n  }\n\n  render() {\n    const { isDoctor } = this.state; // If doctor, will query from doctor table\n\n    return (\n      <Grommet theme={theme} full>\n        <AppBar>\n        <a style={{ color: 'inherit', textDecoration: 'inherit'}} href=\"/\"><Heading level='3' margin='none'>HREP</Heading></a>\n        </AppBar>\n\n        <Box\n          fill\n          align=\"center\"\n          justify=\"top\"\n          pad=\"medium\">\n          <Box\n            width=\"medium\"\n            pad=\"medium\">\n            <Form\n\n              onReset={event => console.log(event)}\n              onSubmit={({ value }) => {\n                console.log(\"Submit\", value);\n                if (value.isDoc === true) {\n                  fetch(\"http://localhost:3001/checkDoclogin?email=\" + value.email +\n                    \"&password=\" + value.password)\n                    .then(res => res.json())\n                    .then(res => {\n                      if (res.data.length === 0) {\n                        window.alert(\"Invalid Log In\");\n                      } else {\n                        window.location = \"DocHome\";\n                        console.log(res.data);\n                      }\n                    });\n                } else {\n                  fetch(\"http://localhost:3001/checklogin?email=\" + value.email +\n                    \"&password=\" + value.password)\n                    .then(res => res.json())\n                    .then(res => {\n                      if (res.data.length === 0) {\n                        window.alert(\"Invalid Log In\");\n                      } else {\n                        window.location = \"/Home\";\n                        console.log(res.data);\n                      }\n                    });\n                }\n              }\n              }>\n              <FormField\n                color=\"#00739D\"\n                label=\"Email\"\n                name=\"email\"\n                type=\"email\"\n                placeholder = \"Please enter your email.\"\n                required />\n              <FormField\n                color=\"#00739D\"\n                type='password'\n                label=\"Password\"\n                name=\"password\"\n                placeholder = \"Please enter your password.\"\n                required />\n              <FormField\n                component={CheckBox}\n                checked={isDoctor}\n                margin=\"large\"\n                label=\"I'm a doctor\"\n                name=\"isDoc\"\n                onChange={(event) => {\n                  this.setState({ isDoctor: event.target.checked })\n                }}\n              />\n              <Box direction=\"column\" align=\"center\" >\n                <Button style={{ textAlign: 'center' , margin:'1rem'}}\n                 type=\"submit\" label=\"Log In\" fill=\"horizontal\" primary />\n                <Button label=\"Create Account\"\n                  style={{ textAlign: 'center' , margin:'0.5rem'}}\n                  fill=\"horizontal\"\n                  href=\"/createAcc\" />\n              </Box>\n            </Form>\n          </Box>\n        </Box>\n      </Grommet>\n    );\n  }\n}\nexport default withRouter(LogIn);","import React, { Component} from 'react';\nimport {\n  Box,\n  Button,\n  Heading,\n  Grommet,\n  FormField,\n  Form,\n  Text\n} from 'grommet';\n\nimport './App.css';\n\nconst theme = {\n  global: {\n    colors: {\n      brand: '#000000',\n      focus: '#000000'\n    },\n    font: {\n      family: 'Lato',\n    },\n  },\n};\n\nconst AppBar = (props) => (\n  <Box\n    tag='header'\n    direction='row'\n    align='center'\n    justify='between'\n    background='brand'\n    pad={{ left: 'medium', right: 'small', vertical: 'small' }}\n    style={{ zIndex: '1' }}\n    {...props} />\n);\nexport class CreateAccount extends Component {\n  constuctor() {\n  }\n\n  render() {\n\n    return (\n      <Grommet theme={theme} full>\n        <AppBar>\n          <a style={{ color: 'inherit', textDecoration: 'inherit'}} href=\"/\"><Heading level='3' margin='none'>HREP</Heading></a>\n        </AppBar>\n        <Box fill align=\"center\" justify=\"top\">\n          <Box width=\"medium\">\n          <Text color = \"#AAAAAA\">Patient's registration form:</Text>\n            <Form\n              onReset={event => console.log(event)}\n              method=\"post\"\n              onSubmit={({ value }) => {\n                console.log(\"Submit\", value);\n\n                fetch(\"http://localhost:3001/checkIfPatientExists?email=\" + value.email)\n                  .then(res => res.json())\n                  .then(res => {\n                    console.log(res.data[0]);\n\n                    if ((res.data[0])) {\n                      window.alert(\"An account is already associated with that email.\");\n                      console.log(\"no user found\");\n                    } else {\n                      fetch(\"http://localhost:3001/makeAccount?name=\" + value.firstName + \"&lastname=\" + value.lastName + \"&email=\" + value.email\n                        + \"&password=\" + value.password + \"&address=\" + value.address + \"&gender=\" + value.gender\n                        + \"&conditions=\" + value.conditions + \"&medications=\" + value.medications + \"&surgeries=\" + value.surgeries);\n                      window.location = \"/Home\";\n                    }\n                  });\n              }}>\n              <FormField\n                label=\"First Name\"\n                name=\"firstName\"\n                placeholder=\"First name\"\n                required\n                validate={{ regexp: /^[a-z]/i }} />\n              <FormField\n                label=\"Last Name\"\n                name=\"lastName\"\n                required\n                placeholder=\"Last Name\"\n                validate={{ regexp: /^[a-z]/i }} />\n              <FormField\n                label=\"Gender\"\n                name=\"gender\"\n                placeholder=\"Female or Male\"\n                required />\n              <FormField\n                label=\"Medical History - Conditions\"\n                name=\"conditions\"\n                placeholder=\"Conditions\"\n               />\n              <FormField\n                label=\"Medical History - Surgeries\"\n                name=\"surgeries\"\n                placeholder=\"Surgeries\"\n               />\n              <FormField\n                label=\"Medical History - Medications\"\n                name=\"medications\"\n                placeholder=\"Medications\"\n               />\n              <FormField\n                label=\"Address\"\n                name=\"address\"\n                placeholder=\"Address\"\n                required />\n              <FormField\n                label=\"Email\"\n                name=\"email\"\n                type=\"email\"\n                placeholder=\"Email\"\n                required />\n              <FormField\n                label=\"Password\"\n                name=\"password\"\n                placeholder=\"Password\"\n                required\n                validate={{ regexp: /^(?=.{8,})(?=.*[0-9]{2})/, message: \"@ least 8 characters containing 2 digits\" }} />\n              <Box direction=\"row\" align=\"center\" >\n                <Button\n                  style={{ textAlign: 'center' }}\n                  label=\"Cancel\"\n                  fill=\"horizontal\"\n                  href=\"/\" />\n                <Button\n                  label=\"Sign Up\"\n                  fill=\"horizontal\"\n                  type=\"submit\"\n                  primary />\n              </Box>\n              <Box\n                align=\"center\" pad=\"small\">\n                <Text>Are you a doctor?</Text>\n                <Button\n                  primary\n                  label=\"I'm a doctor\"\n                  href=\"/MakeDoc\" />\n              </Box>\n            </Form>\n          </Box>\n        </Box>\n      </Grommet>\n    );\n  }\n}\n\nexport default CreateAccount;","import React, { Component } from 'react';\nimport {\n  Box,\n  Button,\n  Heading,\n  Form,\n  TextArea,\n  Grommet\n} from 'grommet';\nimport './App.css';\nconst theme = {\n  global: {\n    colors: {\n      brand: '#000000',\n      focus: \"#000000\",\n      active: \"#000000\",\n    },\n    font: {\n      family: 'Lato',\n    },\n  },\n};\nvar diagnosis;\nvar prescription;\nvar id;\nconst AppBar = (props) => (\n  <Box\n    tag='header'\n    direction='row'\n    align='center'\n    justify='between'\n    background='brand'\n    pad={{ left: 'medium', right: 'small', vertical: 'small' }}\n    style={{ zIndex: '1' }}\n    {...props} />\n);\n\nconst DiagnosisTextArea = () => {\n  const [value, setValue] = React.useState(\" \");\n\n  const onChange = event => {\n    setValue(event.target.value);\n    diagnosis = event.target.value;\n  };\n\n  return (\n    <Grommet theme={theme}>\n      <h4>Diagnosis</h4>\n      <TextArea\n        placeholder=\"Enter Diagnosis\"\n        label=\"Enter Diagnosis\"\n        value={value}\n        onChange={onChange}\n        style={{width:\"50vw\", height:\"12vw\"}}\n        fill\n        required />\n    </Grommet>\n  );\n};\n\nconst PrescriptionTextArea = () => {\n  const [value, setValue] = React.useState(\" \");\n  const onChange = event => {\n    setValue(event.target.value);\n    prescription = event.target.value;\n  };\n  return (\n    <Grommet theme={theme}>\n        <h4>Prescription</h4>\n        <TextArea\n          placeholder=\"Enter Prescription\"\n          label=\"Enter Prescription\"\n          value={value}\n          style={{width:\"50vw\", height:\"12vw\"}}\n          onChange={onChange} fill\n          required />\n    </Grommet>\n  );\n};\n\nexport class Diagnose extends Component {\n  constructor(props) {\n    super(props);\n    id = props.match.params.id;\n  }\n  render() {\n    return (\n      <Grommet theme={theme} full>\n        <AppBar>\n        <a style={{ color: 'inherit', textDecoration: 'inherit'}} href=\"/\"><Heading level='3' margin='none'>HREP</Heading></a>\n        </AppBar>\n        <Box align=\"center\" gap=\"small\">\n          <Form\n            onSubmit={({ value }) => {\n              fetch(\"http://localhost:3001/diagnose?diagnosis=\" + diagnosis + \"&prescription=\" + prescription\n              + \"&id=\" + id).then(()=>{\n              })\n              window.alert(\"Diagnosis Submitted!\");\n            }}\n          >\n            <DiagnosisTextArea />\n            <PrescriptionTextArea />\n            <br />\n            <Box align=\"center\">\n            <Button\n              label=\"Submit Diagnosis\"\n              type=\"submit\"\n              primary\n            />\n            </Box>\n          </Form>\n        </Box>\n      </Grommet>\n    );\n  }\n}\nexport default Diagnose;","import React, { Component} from 'react';\n\nimport {\n    Box,\n    Heading,\n    Grommet,\n    Table,\n    TableBody,\n    TableCell,\n    TableRow\n} from 'grommet';\n\nimport './App.css';\n\nconst theme = {\n    global: {\n        colors: {\n            brand: '#000000',\n            focus: '#000000'\n        },\n        font: {\n            family: 'Lato',\n        },\n    },\n};\n\nvar id;\n\nexport class ShowDiagnoses extends Component {\n    constructor(props) {\n        super(props);\n        id = props.match.params.id;\n    }\n    state = { diagnoses: [] }\n    componentDidMount() {\n        fetch('http://localhost:3001/showDiagnoses?id='+ id)\n        .then(res => res.json())\n        .then(res => this.setState({ diagnoses: res.data }));\n    }\n    render() {\n        const { diagnoses } = this.state;\n        const Header = () => (\n            <Box\n                tag='header'\n                background='brand'\n                pad='small'\n                elevation='small'\n                justify='between'\n                direction='row'\n                align='center'\n                flex={false}\n            >\n                <a style={{ color: 'inherit', textDecoration: 'inherit'}} href=\"/\"><Heading level='3' margin='none'>HREP</Heading></a>\n            </Box>\n        );\n        const Body = () => (\n            <div className=\"container\">\n                <div className=\"panel panel-default p50 uth-panel\">\n                    {diagnoses.map(diagnosis =>\n                        <Table>\n                            <TableBody>\n                                <TableRow>\n                                    <TableCell scope=\"row\">\n                                        <strong>Appointment Id</strong>\n                                    </TableCell>\n                                    <TableCell>{diagnosis.appt}</TableCell>\n                                    <TableCell></TableCell>\n                                </TableRow>\n                                <br />\n                                <TableRow>\n                                    <TableCell scope=\"row\">\n                                        <strong>Doctor</strong>\n                                    </TableCell>\n                                    <TableCell>{diagnosis.doctor}</TableCell>\n                                    <TableCell></TableCell>\n                                </TableRow>\n                                <br />\n                                <TableRow>\n                                    <TableCell scope=\"row\">\n                                        <strong>Diagnosis</strong>\n                                    </TableCell>\n                                    <TableCell>{diagnosis.diagnosis}</TableCell>\n                                    <TableCell></TableCell>\n                                </TableRow>\n                                <br />\n                                <TableRow>\n                                    <TableCell scope=\"row\">\n                                        <strong>Prescription</strong>\n                                    </TableCell>\n                                    <TableCell>{diagnosis.prescription}</TableCell>\n                                    <TableCell></TableCell>\n                                </TableRow>\n                            </TableBody>\n                        </Table>\n                    )}\n                </div>\n                <hr />\n            </div>\n        );\n        return (\n            <Grommet full={true} theme={theme}>\n                <Box fill={true}>\n                    <Header />\n                    <Body />\n                </Box>\n            </Grommet>\n        );\n    }\n}\nexport default ShowDiagnoses;","import React, { Component} from 'react';\n\nimport {\n    Box,\n    Button,\n    Heading,\n    Grommet,\n    FormField,\n    Form\n} from 'grommet';\n\nimport './App.css';\n\nconst theme = {\n    global: {\n      colors: {\n        brand: '#000000',\n        focus: '#000000'\n      },\n      font: {\n        family: 'Lato',\n      },\n    },\n  };\nexport class ViewMedHist extends Component {\n    \n    state = { medhiststate: [] }\n\n    componentDidMount() {\n        this.getNames(\"\");\n        console.log(this.state.names);\n    }\n\n    getNames(value) {\n        let patName = \" \";\n        if (value !== undefined)\n            patName = value;\n        console.log(patName);\n        fetch('http://localhost:3001/MedHistView?name='+ patName + '&variable=words')\n        .then(res => res.json())\n        .then(res => this.setState({ medhiststate: res.data }));\n    }\n\n    render() {\n        const { medhiststate } = this.state;\n\n        const Header = () => (\n            <Box\n                tag='header'\n                background='brand'\n                pad='small'\n                elevation='small'\n                justify='between'\n                direction='row'\n                align='center'\n                flex={false}\n            >\n               <a style={{ color: 'inherit', textDecoration: 'inherit'}} href=\"/\"><Heading level='3' margin='none'>HREP</Heading></a>\n\n            </Box>\n        );\n\n        const Body = () => (\n            <div className=\"container\" style={{width:\"100vw\"}}>\n                <div className=\"panel panel-default p50 uth-panel\">\n                    <table className=\"table table-hover\">\n                        <thead>\n                            <tr>\n                                <th style={{width:\"50vw\"}}>Name</th>\n                                <th style={{width:\"50vw\"}}>Profile</th>\n                            </tr>\n                        </thead> \n                        <tbody>\n                            {medhiststate.map(patient =>\n                                <tr key={patient.id} style={{textAlign:\"center\"}}>\n                                    <td>{patient.Name} </td>\n                                    <td>\n                                        <Button label=\"Medical Profile\" href={'/ViewOneHistory/' + patient.email}/>\n                                    </td>\n                                </tr>\n                            )}\n                        </tbody>\n                    </table>\n                </div>\n            </div>\n        );\n        return (\n            <Grommet full={true}\n            theme = {theme}>\n                <Header />\n                <Box fill={true} align=\"center\">\n                    <Form\n                        onSubmit={({ value }) => {\n                            this.getNames(value.email);\n                        }}>\n                        <h4 style={{textAlign:\"center\", marginBottom:\"0\"}}>Search By Name</h4>\n                        <FormField name=\"email\" align=\"center\" />\n                        <div align=\"center\">\n                            <Button type=\"submit\" primary label=\"Submit\" />\n                        </div>\n                    </Form>\n                    <Body />\n                </Box>\n            </Grommet>\n        );\n    }\n}\n\nexport default ViewMedHist;","import React, { Component, useState } from 'react';\nimport {\n    Box,\n    Button,\n    Heading,\n    Grommet,\n    Grid,\n    Text,\n} from 'grommet';\n\nimport './App.css';\n\nconst theme = {\n    global: {\n        colors: {\n            brand: '#000000',\n            focus: '#000000'\n        },\n        font: {\n            family: 'Lato',\n        },\n    },\n};\n\nconst SidebarButton = ({ label, ...rest }) => (\n    <Button plain {...rest}>\n        {({ hover }) => (\n            <Box\n                background={hover ? \"#DADADA\" : undefined}\n                pad={{ horizontal: \"large\", vertical: \"medium\" }}\n            >\n                <Text size=\"large\">{label}</Text>\n            </Box>\n        )}\n    </Button>\n);\n\nconst SidebarButtons = () => {\n    const [active, setActive] = useState();\n    return (\n        <Grommet full theme={theme}>\n            <Box fill direction=\"row\">\n                <Box background=\"brand\">\n                    {[\"Appointments\", \"View Patients\", \"Settings\", \"Sign Out\"].map(label => (\n                        <SidebarButton\n                            key={label}\n                            label={label}\n                            active={label === active}\n                            onClick={() => {\n                                if (label === \"Appointments\") {\n                                    window.location = \"/ApptList\"\n                                }\n                                else if (label === \"Sign Out\") {\n                                    fetch(\"http://localhost:3001/endSession\");\n                                    window.location = \"/\"\n                                }\n                                else if (label === \"Settings\") {\n                                    window.location = \"/DocSettings\"\n                                }\n                                else if (label === \"View Patients\") {\n                                    window.location = \"/MedHistView\"\n                                }\n                                setActive(label);\n                            }}\n                        />\n                    ))}\n\n                </Box>\n            </Box>\n        </Grommet>\n    );\n};\n\nexport class DocHome extends Component {\n    componentDidMount() {\n    }\n\n    render() {\n        const Header = () => (\n            <Box\n                tag='header'\n                background='brand'\n                pad='small'\n                elevation='small'\n                justify='between'\n                direction='row'\n                align='center'\n                flex={false}\n                style={{borderBottom:\"1px solid grey\"}}\n            >\n                <a style={{ color: 'inherit', textDecoration: 'inherit'}} href=\"/\"><Heading level='3' margin='none'>HREP</Heading></a>\n\n            </Box>\n        );\n\n        return (\n            <Grommet full={true}\n                theme={theme}>\n                <Box align=\"left\">\n                    <Header/>\n                    <Grid\n                        fill\n                        rows={['auto', 'flex']}\n                        columns={['auto', 'flex']}\n                        areas={[\n                            { name: 'sidebar', start: [0, 1], end: [0, 1] },\n                            { name: 'main', start: [1, 1], end: [1, 1] },\n                        ]}>\n                        <Box\n                        gridArea=\"sidebar\"\n                        width=\"small\"\n                        animation={[\n                        { type: 'fadeIn', duration: 300 },\n                        { type: 'slideRight', size: 'xlarge', duration: 150 },\n                        ]}\n                        >\n                            <SidebarButtons />\n                        </Box>\n                        <Box\n                            gridArea=\"main\"\n                            justify=\"top\"\n                            align=\"center\">\n                            <Box align=\"center\" pad=\"large\">\n                                <Heading\n                                    color=\"#000000\">Welcome Doctor\n                                </Heading>\n                            </Box>\n                        </Box>\n                    </Grid>\n                </Box>\n            </Grommet>\n        );\n    }\n}\n\nexport default DocHome;","import React, { Component} from 'react';\n\nimport {\n    Box,\n    Heading,\n    Grommet,\n    Table,\n    TableBody,\n    TableCell,\n    TableRow\n} from 'grommet';\n\nimport './App.css';\n\nconst theme = {\n    global: {\n        colors: {\n            brand: '#000000',\n            focus: '#000000'\n        },\n        font: {\n            family: 'Lato',\n        },\n    },\n};\n\nexport class ViewOneHistory extends Component {\n    state = { medhiststate: [], medhiststate2: []}\n    componentDidMount() {\n        const { email } = this.props.match.params;\n        this.allDiagnoses(email);\n        this.getHistory(email);\n    }\n\n    getHistory(value) {\n        let email = \"'\" + value + \"'\";\n        fetch('http://localhost:3001/OneHistory?patientEmail='+ email)\n        .then(res => res.json())\n            .then(res => this.setState({ medhiststate: res.data }));\n    }\n\n    allDiagnoses(value) {\n        let email = \"'\" + value + \"'\";\n        fetch('http://localhost:3001/allDiagnoses?patientEmail='+ email)\n        .then(res => res.json())\n        .then(res => this.setState({ medhiststate2: res.data }));\n    }\n\n    render() {\n        const { medhiststate } = this.state;\n        const { medhiststate2 } = this.state;\n        const Header = () => (\n            <Box\n                tag='header'\n                background='brand'\n                pad='small'\n                elevation='small'\n                justify='between'\n                direction='row'\n                align='center'\n                flex={false}\n            >\n                <a style={{ color: 'inherit', textDecoration: 'inherit'}} href=\"/\"><Heading level='3' margin='none'>HREP</Heading></a>\n            </Box>\n        );\n        const Body = () => (\n            <div className=\"container\">\n                <div className=\"panel panel-default p50 uth-panel\">\n                    {medhiststate.map(patient =>\n                        <Table>\n                            <TableBody>\n                                <TableRow>\n                                    <TableCell scope=\"row\">\n                                        <strong>Name</strong>\n                                    </TableCell>\n                                    <TableCell>{patient.name}</TableCell>\n                                    <TableCell></TableCell>\n                                    <TableCell><strong>Email</strong></TableCell>\n                                    <TableCell>{patient.email}</TableCell>\n                                </TableRow>\n                                <TableRow>\n                                    <TableCell scope=\"row\">\n                                        <strong>Gender</strong>\n                                    </TableCell>\n                                    <TableCell>\n                                        {patient.gender}\n                                    </TableCell>\n                                    <TableCell />\n                                    <TableCell>\n                                        <strong>Address</strong>\n                                    </TableCell>\n                                    <TableCell>{patient.address}</TableCell>\n                                </TableRow>\n                                <TableRow>\n                                    <TableCell scope=\"row\">\n                                    </TableCell>\n                                </TableRow>\n                                <TableRow>\n                                    <TableCell>\n                                        <strong>Conditions</strong>\n                                    </TableCell>\n                                    <TableCell>{patient.conditions}\n                                        </TableCell>\n                                </TableRow>\n                                <TableRow>\n                                    <TableCell scope=\"row\">\n                                    </TableCell>\n                                </TableRow>\n                                <TableRow>\n                                    <TableCell>\n                                        <strong>Surgeries</strong>\n                                    </TableCell>\n                                    <TableCell>{patient.surgeries}\n                                    </TableCell>\n                                </TableRow>\n                                <TableRow>\n                                    <TableCell scope=\"row\">\n                                    </TableCell>\n                                </TableRow>\n                                <TableRow>\n                                    <TableCell>\n                                        <strong>Medications</strong>\n                                    </TableCell>\n                                    <TableCell>{patient.medication}\n                                    </TableCell>\n                                </TableRow>\n                            </TableBody>\n                        </Table>\n                    )}\n                </div>\n                <hr />\n            </div>\n        );\n        const Body2 = () => (\n            <div className=\"container\">\n                <div className=\"panel panel-default p50 uth-panel\">\n                    {medhiststate2.map(patient =>\n                        <div>\n                        <Table>\n                            <TableBody>\n                                <TableRow>\n                                    <TableCell scope=\"row\">\n                                        <strong>Date</strong>\n                                    </TableCell>\n                                    <TableCell>{patient.date.split('T')[0]}</TableCell>\n                                    <TableCell></TableCell>\n                                    <TableCell><strong>Doctor</strong></TableCell>\n                                    <TableCell>{patient.doctor}</TableCell>\n                                </TableRow>\n                                <TableRow>\n                                    <TableCell scope=\"row\">\n                                        <strong>Concerns</strong>\n                                    </TableCell>\n                                    <TableCell>\n                                        {patient.concerns}\n                                    </TableCell>\n                                    <TableCell />\n                                    <TableCell>\n                                        <strong>Symptoms</strong>\n                                    </TableCell>\n                                    <TableCell>{patient.symptoms}</TableCell>\n                                </TableRow>\n                                <TableRow>\n                                    <TableCell scope=\"row\">\n                                    </TableCell>\n                                </TableRow>\n                                <TableRow>\n                                    <TableCell>\n                                        <strong>Diagnosis</strong>\n                                    </TableCell>\n                                    <TableCell>{patient.diagnosis}\n                                        </TableCell>\n                                </TableRow>\n                                <TableRow>\n                                    <TableCell scope=\"row\">\n                                    </TableCell>\n                                </TableRow>\n                                <TableRow>\n                                    <TableCell>\n                                        <strong>Prescription</strong>\n                                    </TableCell>\n                                    <TableCell>{patient.prescription}\n                                    </TableCell>\n                                </TableRow>\n                                <TableRow>\n                                    <TableCell scope=\"row\">\n                                    </TableCell>\n                                </TableRow>\n                            </TableBody>\n                        </Table>\n                        <hr />\n                        </div>\n                    )}\n                </div>\n            </div>\n        );\n        return (\n            <Grommet full={true} theme={theme}>\n                <Box fill={true}>\n                    <Header />\n                    <Body />\n                    <Body2 />\n                </Box>\n            </Grommet>\n        );\n    }\n}\nexport default ViewOneHistory;","import React, { Component} from 'react';\n\nimport {\n    Box,\n    Button,\n    Heading,\n    Grommet,\n    FormField,\n    Form,\n} from 'grommet';\n\nimport './App.css';\n\nconst theme = {\n    global: {\n        colors: {\n            brand: '#000000',\n            focus: '#000000'\n        },\n        font: {\n            family: 'Lato',\n        },\n    },\n};\n\nconst AppBar = (props) => (\n    <Box\n        tag='header'\n        direction='row'\n        align='center'\n        justify='between'\n        background='brand'\n        pad={{ left: 'medium', right: 'small', vertical: 'small' }}\n        style={{ zIndex: '1' }}\n        {...props} />\n);\nexport class Settings extends Component {\n    constuctor() {\n    }\n    render() {\n        return (\n            <Grommet theme={theme} full>\n                <Box >\n                    <AppBar>\n                    <a style={{ color: 'inherit', textDecoration: 'inherit'}} href=\"/\"><Heading level='3' margin='none'>HREP</Heading></a>\n                    </AppBar>\n                    <Box pad=\"small\">\n                    <Form\n                    onSubmit={({ value }) => {\n                        let email_in_use = \"\";\n                        console.log(value);\n                        fetch(\"http://localhost:3001/userInSession\")\n                          .then(res => res.json())\n                          .then(res => {\n                            var string_json = JSON.stringify(res);\n                            var email_json = JSON.parse(string_json);\n                            email_in_use = email_json.email;\n                            console.log(email_in_use);\n                            console.log(\"eg\");\n                          fetch(\"http://localhost:3001/resetPasswordPatient?email=\" + \n                          email_in_use + \"&oldPassword=\" + value.oldPassword + \"&newPassword=\" + \n                          value.newPassword, {method: 'POST'})\n                          .then(res => res.json())\n                          .then(res => {\n                            let didUpdate = res.data.affectedRows;\n                            if(didUpdate === 0) {\n                                window.alert(\"Entered your old password incorrectly\");\n                            } else {\n                                window.alert(\"Password Reset Successful\");\n                            }\n                          });\n                          });\n                    }}>\n                        <h3>Password Change</h3>\n                        <FormField\n                            type='password'\n                            label=\"Old password\"\n                            name=\"oldPassword\"\n                            required\n                        />\n                        <br />\n                        <FormField\n                            label=\"New password\"\n                            name=\"newPassword\"\n                            required\n                        />\n                        <br />\n                        <Button\n                            type=\"submit\"\n                            label=\"Change Password\"\n                            primary\n                        />\n                    </Form>\n                    </Box>\n                </Box>\n            </Grommet>\n        );\n    }\n}\nexport default Settings;","import React, { Component} from 'react';\n\nimport {\n    Box,\n    Button,\n    Heading,\n    Grommet,\n    FormField,\n    Form\n} from 'grommet';\n\nimport './App.css';\n\nconst theme = {\n    global: {\n        colors: {\n            brand: '#000000',\n            focus: '#000000'\n        },\n        font: {\n            family: 'Lato',\n        },\n    },\n};\n\nconst AppBar = (props) => (\n    <Box\n        tag='header'\n        direction='row'\n        align='center'\n        justify='between'\n        background='brand'\n        pad={{ left: 'medium', right: 'small', vertical: 'small' }}\n        style={{ zIndex: '1' }}\n        {...props} />\n);\n\nexport class DocSettings extends Component {\n    constuctor() {\n    }\n    render() {\n        return (\n            <Grommet theme={theme} full>\n                <Box >\n                    <AppBar>\n                    <a style={{ color: 'inherit', textDecoration: 'inherit'}} href=\"/\"><Heading level='3' margin='none'>HREP</Heading></a>\n                    </AppBar>\n                    <Box pad=\"small\">\n                    <Form\n                    onSubmit={({ value }) => {\n                        let email_in_use = \"\";\n                        console.log(value);\n                        fetch(\"http://localhost:3001/userInSession\")\n                          .then(res => res.json())\n                          .then(res => {\n                            var string_json = JSON.stringify(res);\n                            var email_json = JSON.parse(string_json);\n                            email_in_use = email_json.email;\n                            console.log(email_in_use);\n                          fetch(\"http://localhost:3001/resetPasswordDoctor?email=\" + \n                          email_in_use + \"&oldPassword=\" + value.oldPassword + \"&newPassword=\" + \n                          value.newPassword, {method: 'POST'})\n                          .then(res => res.json())\n                          .then(res => {\n                            let didUpdate = res.data.affectedRows;\n                            if(didUpdate === 0) {\n                                window.alert(\"Old Password is wrong\");\n                            } else {\n                                window.alert(\"Password Reset Successful\");\n                            }\n                          });\n                          });\n\n                    }}>\n                        <h3>Password Change</h3>\n                        <FormField\n                            type='password'\n                            label=\"Old Password\"\n                            name=\"oldPassword\"\n                            required\n                        />\n                        <br />\n                        <FormField\n                            label=\"New Password\"\n                            name=\"newPassword\"\n                            required\n                        />\n                        <br />\n                        <Button\n                            type=\"submit\"\n                            label=\"Change Password\"\n                            primary\n                        />\n                    </Form>\n                    </Box>\n                </Box>\n            </Grommet>\n        );\n    }\n}\n\nexport default DocSettings;","import React, { Component} from 'react';\n\nimport {\n    Box,\n    Heading,\n    Grommet,\n    Button\n} from 'grommet';\n\nimport './App.css';\n\nconst theme = {\n    global: {\n        colors: {\n            brand: '#000000',\n            focus: '#000000'\n        },\n        font: {\n            family: 'Lato',\n        },\n    },\n};\n\nconst AppBar = (props) => (\n    <Box\n        tag='header'\n        direction='row'\n        align='center'\n        justify='between'\n        background='brand'\n        pad={{ left: 'medium', right: 'small', vertical: 'small' }}\n        style={{ zIndex: '1' }}\n        {...props} />\n);\n\nexport class PatientsViewAppointments extends Component {\n    state = { appointmentsState: [] }\n    componentDidMount() {\n        this.getNames(\"\");\n    }\n    getNames(value) {\n        let patName = value;\n        console.log(patName);\n        fetch(\"http://localhost:3001/userInSession\")\n            .then(res => res.json())\n            .then(res => {\n                var string_json = JSON.stringify(res);\n                var email_json = JSON.parse(string_json);\n                let email_in_use = email_json.email;\n                fetch('http://localhost:3001/patientViewAppt?email=' + email_in_use)\n                    .then(res => res.json())\n                    .then(res => {\n                        this.setState({ appointmentsState: res.data });\n                    });\n            });\n    }\n    render() {\n        const { appointmentsState } = this.state;\n        const Body = () => (\n            <div className=\"container\">\n                <div className=\"panel panel-default p50 uth-panel\">\n                    <table className=\"table table-hover\">\n                        <thead>\n                            <tr>\n                            <th>Date of Appointment</th>\n                                <th>Start Time</th>\n                                <th>End Time</th>\n                                <th>Concerns</th>\n                                <th>Symptoms</th>\n                                <th>Status</th>\n                            </tr>\n                        </thead>\n                        <tbody>\n                            {appointmentsState.map(patient =>\n                                <tr key={patient.user}>\n                                    <td align=\"center\" >\n                                        {new Date(patient.theDate).toLocaleDateString().substring(0, 10)}\n                                    </td>\n                                    <td align=\"center\" >{patient.theStart.substring(0, 5)}</td>\n                                    <td align=\"center\" >{patient.theEnd.substring(0, 5)}</td>\n                                    <td align=\"center\">{patient.theConcerns} </td>\n                                    <td align=\"center\">{patient.theSymptoms}</td>\n                                    <td align=\"center\">{patient.status}</td>\n                                    <td>\n                                        <Button label=\"See Diagnosis\"\n                                        href={`/showDiagnoses/${patient.ID}`}\n                                        ></Button>     \n                                    </td> \n                                    <td>\n                                    {   patient.status===\"NotDone\"?\n                                        <Button label=\"Cancel\"\n                                        onClick = {() => {\n                                            fetch('http://localhost:3001/deleteAppt?uid='+ patient.ID)\n                                            window.location.reload()\n                                        }}\n                                        ></Button>\n                                        :\n                                        <Button label=\"Delete\"\n                                        onClick = {() => {\n                                            fetch('http://localhost:3001/deleteAppt?uid='+ patient.ID)\n                                            window.location.reload()\n                                        }}\n                                        ></Button>\n                                    }\n                                    </td>\n                                </tr>\n                            )}\n                        </tbody>\n                    </table>\n                </div>\n            </div>\n        );\n        return (\n            <Grommet theme={theme} full>\n                <Box >\n                    <AppBar>\n                    <a style={{ color: 'inherit', textDecoration: 'inherit'}} href=\"/\"><Heading level='3' margin='none'>HREP</Heading></a>\n                    </AppBar>\n                    <Body />\n                </Box>\n            </Grommet>\n        );\n    }\n}\n\nexport default PatientsViewAppointments;","import React, { Component} from 'react';\nimport {\n    Box,\n    Heading,\n    Grommet,\n} from 'grommet';\n\nimport './App.css';\n\nconst theme = {\n    global: {\n        colors: {\n            brand: '#000000',\n            focus: '#000000'\n        },\n        font: {\n            family: 'Lato',\n        },\n    },\n};\n\nexport class NoMedHistFound extends Component {\n    componentDidMount() {\n    }\n    render() {\n        const Header = () => (\n            <Box\n                tag='header'\n                background='brand'\n                pad='small'\n                elevation='small'\n                justify='between'\n                direction='row'\n                align='center'\n                flex={false}\n            >\n                <a style={{ color: 'inherit', textDecoration: 'inherit'}} href=\"/\"><Heading level='3' margin='none'>HREP</Heading></a>\n\n            </Box>\n        );\n        const Body = () => (\n            <div className=\"container\">\n                <div className=\"panel panel-default p50 uth-panel\" >\n                    <Heading alignSelf=\"center\" textAlign=\"right\" margin=\"large\">Medical History Not Found<br /></Heading>\n                </div>\n            </div>\n        );\n        return (\n            <Grommet full={true} theme={theme}>\n                <Box fill={true}>\n                    <Header />\n                    <Body />\n                </Box>\n            </Grommet>\n        );\n    }\n}\nexport default NoMedHistFound;","import React, { Component} from 'react';\nimport {\n    Box,\n    Button,\n    Heading,\n    Grommet,\n} from 'grommet';\n\nimport './App.css';\n\nconst theme = {\n    global: {\n      colors: {\n        brand: '#000000',\n        focus: '#000000'\n      },\n      font: {\n        family: 'Lato',\n      },\n    },\n  };\n\nexport class DocViewAppt extends Component {\n    state = { apptlist: [] }\n\n    componentDidMount() {\n        this.getNames();\n    }\n\n    getNames() {\n        fetch('http://localhost:3001/doctorViewAppt')\n        .then(res => res.json())\n        .then(res => this.setState({ apptlist: res.data }));\n    }\n\n    render() {\n        const { apptlist } = this.state;\n        const Header = () => (\n            <Box\n                tag='header'\n                background='brand'\n                pad='small'\n                elevation='small'\n                justify='between'\n                direction='row'\n                align='center'\n                flex={false}\n            >\n                <a style={{ color: 'inherit', textDecoration: 'inherit'}} href=\"/\"><Heading level='3' margin='none'>HREP</Heading></a>\n            </Box>\n        );\n\n        const Body = () => (\n            <div className=\"container\">\n                <div className=\"panel panel-default p50 uth-panel\">\n                    <table className=\"table table-hover\">\n                        <thead>\n                            <tr>\n                                <th>ID</th>\n                                <th>Name</th>\n                                <th>Date</th>\n                                <th>Start Time</th>\n                                <th>Concerns</th>\n                                <th>Symptoms</th>\n                                <th>Status</th>\n                            </tr>\n                        </thead>\n                        <tbody>\n                            {apptlist.map(appt =>\n                                <tr key={appt.name}>\n                                    <td>{appt.id}</td>\n                                    <td>{appt.name}</td>\n                                    <td>{new Date(appt.date).toLocaleDateString().substring(0,10)} </td>\n                                    <td>{appt.starttime}</td>\n                                    <td>{appt.concerns}</td>\n                                    <td>{appt.symptoms}</td>\n                                    <td>{appt.status}</td>\n                                    <td>\n                                        <Button label=\"Diagnose\"\n                                        href={`/Diagnose/${appt.id}`}\n                                        ></Button>     \n                                    </td> \n                                    <td>\n                                        {appt.status === \"NotDone\"?\n                                            <Button label=\"Cancel\"\n                                            onClick = {() => {\n                                                fetch('http://localhost:3001/deleteAppt?uid='+ appt.id)\n                                                window.location.reload();\n                                            }}\n                                            ></Button>\n                                        :<div></div>}\n                                    </td> \n                                </tr>\n                            )}\n                        </tbody>\n                    </table>\n                </div>\n            </div>\n\n        );\n        return (\n            <Grommet full={true}\n            theme = {theme}>\n                <Header />\n                <Box fill={true}>\n                    <Body />\n                </Box>\n            </Grommet>\n        );\n    }\n}\n\nexport default DocViewAppt;","import React, { Component} from 'react';\n\nimport {\n    Box,\n    Button,\n    Heading,\n    Grommet,\n    FormField,\n    Form,\n    Text,\n\n} from 'grommet';\n\nimport './App.css';\n\nconst theme = {\n    global: {\n        colors: {\n            brand: '#000000',\n            focus: \"#000000\",\n            active: \"#000000\",\n        },\n        font: {\n            family: 'Lato',\n        },\n    },\n};\n\nconst AppBar = (props) => (\n    <Box\n        tag='header'\n        direction='row'\n        align='center'\n        justify='between'\n        background='brand'\n        pad={{ left: 'medium', right: 'small', vertical: 'small' }}\n        style={{ zIndex: '1' }}\n        {...props} />\n);\n\nexport class MakeDoc extends Component {\n    constuctor() {\n    }\n    render() {\n        return (\n            <Grommet theme={theme} full>\n                <AppBar>\n                <a style={{ color: 'inherit', textDecoration: 'inherit'}} href=\"/\"><Heading level='3' margin='none'>HREP</Heading></a>\n                </AppBar>\n                <Box fill align=\"center\" justify=\"top\">\n                    <Box width=\"medium\">\n                    <Text color = \"#AAAAAA\">Doctor's registration form:</Text>\n                        <Form\n                            onReset={event => console.log(event)}\n                            method=\"post\"\n                            onSubmit={({ value }) => {\n                                console.log(\"Submit\", value);\n                                console.log(value.email)\n                                fetch(\"http://localhost:3001/checkIfDocExists?email=\" + value.email)\n                                    .then(res => res.json())\n                                    .then(res => {\n                                        console.log(res.data[0]);\n                                        if ((res.data[0])) {\n                                            window.alert(\"A doctor is already associated with that email.\");\n                                            console.log(\"no user found\");\n                                        } else {\n                                            fetch(\"http://localhost:3001/makeDocAccount?name=\" + value.firstName + \"&lastname=\" + value.lastName + \"&email=\" + value.email\n                                                + \"&password=\" + value.password + \"&gender=\" + value.gender + \"&schedule=\" + value.schedule);\n                                            window.location = \"/DocHome\";\n                                        }\n                                    });\n                            }} >\n                            <FormField\n                                label=\"First Name\"\n                                name=\"firstName\"\n                                required\n                                placeholder=\"Please enter your first name.\"\n                                validate={{ regexp: /^[a-z]/i }} />\n                            <FormField\n                                label=\"Last Name\"\n                                name=\"lastName\"\n                                required\n                                placeholder=\"Please enter your last name.\"\n                                validate={{ regexp: /^[a-z]/i }} />\n                            <FormField\n                                label=\"Email\"\n                                name=\"email\"\n                                type=\"email\"\n                                placeholder=\"Please enter your email.\"\n                                required />\n                            <FormField\n                                label=\"Schedule No\"\n                                name=\"schedule\"\n                                placeholder=\"Please enter schedule number\"\n                                required />\n                            <FormField\n                                label=\"Gender\"\n                                name=\"gender\"\n                                placeholder=\"Female or Male\"\n                                required />\n                            <FormField\n                                label=\"Password\"\n                                name=\"password\"\n                                required\n                                placeholder=\"Please enter your password.\"\n                                validate={{ regexp: /^(?=.{8,})(?=.*[0-9]{2})/, message: \"@ least 8 characters containing 2 digits\" }} />\n                            <Box direction=\"row\" align=\"center\" >\n                                <Button\n                                    style={{ textAlign: 'center' }}\n                                    label=\"Cancel\"\n                                    fill=\"horizontal\"\n                                    href=\"/\" />\n                                <Button\n                                    label=\"Sign Up\"\n                                    fill=\"horizontal\"\n                                    type=\"submit\"\n                                    primary />\n                            </Box>\n\n                        </Form>\n                    </Box>\n                </Box>\n\n            </Grommet>\n        );\n    }\n}\n\nexport default MakeDoc;","import React,{useEffect, useState} from \"react\";\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route\n} from \"react-router-dom\";\nimport Home from './Home';\nimport LogIn from './logIn.js';\nimport CreateAccount from './CreateAccount.js';\nimport SchedulingAppt from './schedulingAppt.js';\nimport ViewMedHist from './ViewMedHist.js';\nimport DocHome from './DocHome.js';\nimport ViewOneHistory from './ViewOneHistory.js';\nimport Settings from './Settings.js';\nimport DocSettings from './DocSettings.js';\nimport PatientsViewAppt from './PatientsViewAppt.js';\nimport NoMedHistFound from './NoMedHistFound.js';\nimport DocViewAppt from './DocViewAppt.js';\nimport MakeDoc from './MakeDoc.js';\nimport Diagnose from './Diagnose.js';\nimport ShowDiagnoses from './ShowDiagnoses.js';\n\nexport default function App() {\n  let [component, setComponent] = useState(<LogIn />)\n  useEffect(()=>{\n    fetch(\"http://localhost:3001/userInSession\")\n      .then(res => res.json())\n      .then(res => {\n      let string_json = JSON.stringify(res);\n      let email_json = JSON.parse(string_json);\n      let email = email_json.email;\n      let who = email_json.who;\n      if(email === \"\"){\n        setComponent(<LogIn />)\n      }\n      else{\n        if(who===\"pat\"){\n          setComponent(<Home />)\n        }\n        else{\n          setComponent(<DocHome />)\n        }\n      }\n    });\n  }, [])\n  return (\n    <Router>\n      <div>\n        <Switch>\n          <Route path=\"/NoMedHistFound\">\n            <NoMedHistFound />\n          </Route>\n          <Route path=\"/MakeDoc\">\n            <MakeDoc />\n          </Route>\n          <Route path=\"/Settings\">\n            <Settings />\n          </Route>\n          <Route path=\"/MedHistView\">\n            <ViewMedHist />\n          </Route>\n          <Route path=\"/scheduleAppt\">\n            <SchedulingAppt />\n          </Route>\n          <Route path=\"/showDiagnoses/:id\" render={props=><ShowDiagnoses {...props} />} />\n          <Route path=\"/Diagnose/:id\" render={props=><Diagnose {...props} />} />\n          <Route name=\"onehist\" path=\"/ViewOneHistory/:email\" render={props=><ViewOneHistory {...props} />}/>\n          <Route path=\"/Home\">\n            <Home />\n          </Route>\n          <Route path=\"/createAcc\">\n            <CreateAccount />\n          </Route>\n          <Route path=\"/DocHome\">\n            <DocHome />\n          </Route>\n          <Route path=\"/PatientsViewAppt\">\n            <PatientsViewAppt />\n          </Route>\n          <Route path=\"/DocSettings\">\n            <DocSettings />\n          </Route>\n          <Route path=\"/ApptList\">\n            <DocViewAppt />\n          </Route>\n          <Route path=\"/\">\n            {component}\n          </Route>\n        </Switch>\n      </div>\n    </Router>\n  );\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}